// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc.team4930.robot;

import org.usfirst.frc.team4930.robot.commands.*;
import edu.wpi.first.wpilibj.Joystick;
import edu.wpi.first.wpilibj.buttons.JoystickButton;



/**
 * This class is the glue that binds the controls on the physical operator
 * interface to the commands and command groups that allow control of the robot.
 */
public class OI {
    //// CREATING BUTTONS
    // One type of button is a joystick button which is any button on a joystick.
    // You create one by telling it which joystick it's on and which button
    // number it is.
    // Joystick stick = new Joystick(port);
    // Button button = new JoystickButton(stick, buttonNumber);

    // There are a few additional built in buttons you can use. Additionally,
    // by subclassing Button you can create custom triggers and bind those to
    // commands the same as any other Button.

    //// TRIGGERING COMMANDS WITH BUTTONS
    // Once you have a button, it's trivial to bind it to a button in one of
    // three ways:

    // Start the command when the button is pressed and let it run the command
    // until it is finished as determined by it's isFinished method.
    // button.whenPressed(new ExampleCommand());

    // Run the command while the button is being held down and interrupt it once
    // the button is released.
    // button.whileHeld(new ExampleCommand());

    // Start the command when the button is released  and let it run the command
    // until it is finished as determined by it's isFinished method.
    // button.whenReleased(new ExampleCommand());


    public Joystick joystick0;
    
    public JoystickButton joystick0button2;
    
    public JoystickButton joystick0button3;
    public JoystickButton joystick0button4;
    
    public JoystickButton joystick0button5;
    public JoystickButton joystick0button6;



    public OI() {

        joystick0 = new Joystick(0);
        
        joystick0button2 = new JoystickButton(joystick0, 2);
        joystick0button3 = new JoystickButton(joystick0, 3);
        joystick0button4 = new JoystickButton(joystick0, 4);
        joystick0button5 = new JoystickButton(joystick0, 5);
        joystick0button6 = new JoystickButton(joystick0, 6);

        joystick0button2.whenPressed(new RunMotors());
        
        joystick0button3.whenPressed(new StartVelocityLoop(500.0));
        joystick0button4.whenPressed(new StartVelocityLoop(0.0));
        
        joystick0button5.whenPressed(new StartPositionLoop(10000.0));
        
        joystick0button6.whenPressed(new StartPositionLoop(0.0));
        

        // SmartDashboard Buttons
//        SmartDashboard.putData("DriveToPosition 10000.0", new DriveToPosition(10000.0));
    }

    public Joystick getJoystick0() {
        return joystick0;
    }

}

